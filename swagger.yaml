swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: User Transactions API
      description: API for getting all monthly transactions of the user
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: user transactions retrieved successfully
          schema:
            $ref: '#/definitions/ApiTransactionsResponse'
        '401':
          description: authentication is required
        '500':
          description: Internal Server Error
  /transactions/:id:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: User specific Transaction API
      description: API for getting one specific transaction informations of the user
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: id
          in: path
          description: ID of the transaction to return
          required: true
          schema:
            type: integer
            format: int64
      produces:
        - application/json
      responses:
        '200':
          description: user transaction retrieved successfully
          schema:
            $ref: '#/definitions/ApiOneTransactionResponse'
        '401':
          description: authentication is required
        '403':
          description: access forbidden
        '404':
          description: transaction not found
        '500':
          description: Internal Server Error
    post:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: User specific Transaction API
      description: API for adding informations to a user sepectific transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: id
          in: path
          description: ID of the transaction to return
          required: true
          schema:
            type: integer
            format: int64
        - in: body
          name: body
          description: Update user transaction attributes
          required: true
          schema:
            $ref: '#/definitions/TransactionTitle'
      produces:
        - application/json
      responses:
        '200':
          description: transaction informations created successfully
          schema:
            $ref: '#/definitions/ApiOneTransactionResponse'
        '400':
          description: invalid field
        '401':
          description: authentication is required
        '403':
          description: access forbidden
        '404':
          description: transaction not found
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: User specific Transaction API
      description: API for modifying informations of a user sepectific transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: id
          in: path
          description: ID of the transaction to return
          required: true
          schema:
            type: integer
            format: int64
        - in: body
          name: body
          description: Update user transaction attributes
          required: true
          schema:
            $ref: '#/definitions/TransactionTitle'
      produces:
        - application/json
      responses:
        '200':
          description: transaction informations modified successfully
          schema:
            $ref: '#/definitions/ApiOneTransactionResponse'
        '400':
          description: invalid field
        '401':
          description: authentication is required
        '403':
          description: access forbidden
        '404':
          description: transaction not found
        '500':
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: User specific Transaction API
      description: API for deleting informations of a user sepectific transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: id
          in: path
          description: ID of the transaction to return
          required: true
          schema:
            type: integer
            format: int64
      produces:
        - application/json
      responses:
        '200':
          description: transaction informations deleted successfully
          schema:
            $ref: '#/definitions/ApiOneTransactionResponse'
        '401':
          description: authentication is required
        '403':
          description: access forbidden
        '404':
          description: transaction not found
        '500':
          description: Internal Server Error
 
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  ApiTransactionsResponse:
    type: object
    properties:
      body:
        type: array
        items:
          type: object
          properties:
            id:
             type: number
            date: 
              type: string
              example: DD/MM/YYYY
            type: 
              type: string
            category: 
              type: string
            subCategory:
              type: string
            title: 
              type: string
            description: 
              type: string
            customDescription: 
              type: string
            amount: 
             type: number
            currency: 
              type: string
  ApiOneTransactionResponse:
    type: object
    properties:
      body:
        type: object
        properties:
          id:
            type: number
          date: 
            type: string
            example: DD/MM/YYYY
          type: 
            type: string
          category: 
            type: string
          subCategory:
            type: string
          title: 
            type: string
          description: 
            type: string
          customDescription: 
            type: string
          amount: 
            type: number
  TransactionTitle:
    type: object
    properties:
      title:
        type: string
      category:
        type: string
      subCategory:
        type: string
      customDescription:
        type: string
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10